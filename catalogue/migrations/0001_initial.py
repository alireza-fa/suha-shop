# Generated by Django 3.2 on 2022-05-08 21:52

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='brand')),
                ('english_name', models.CharField(max_length=120, unique=True, verbose_name='english name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=120, unique=True, verbose_name='slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
            ],
            options={
                'verbose_name': 'brand',
                'verbose_name_plural': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='name')),
                ('english_name', models.CharField(max_length=120, unique=True, verbose_name='english name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=120, unique=True, verbose_name='slug')),
                ('is_child', models.BooleanField(default=False, verbose_name='is child')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalogue.category', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='color')),
                ('english_name', models.CharField(max_length=32, verbose_name='english name')),
                ('slug', models.SlugField(max_length=32, verbose_name='slug')),
                ('code', models.CharField(max_length=32, verbose_name='code')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upc', models.IntegerField(unique=True, verbose_name='upc code')),
                ('title', models.CharField(max_length=240, unique=True, verbose_name='title')),
                ('english_title', models.CharField(max_length=240, unique=True, verbose_name='english title')),
                ('slug', models.SlugField(allow_unicode=True, max_length=240, unique=True, verbose_name='slug')),
                ('count', models.PositiveSmallIntegerField(verbose_name='count')),
                ('purchase_count', models.PositiveSmallIntegerField(default=0, verbose_name='purchase count')),
                ('description', ckeditor.fields.RichTextField(verbose_name='description')),
                ('price_for_me', models.PositiveIntegerField(verbose_name='price for me')),
                ('price', models.PositiveIntegerField(verbose_name='price')),
                ('image', models.ImageField(upload_to='', verbose_name='image')),
                ('video', models.FileField(blank=True, null=True, upload_to='', verbose_name='video')),
                ('discount', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='discount')),
                ('discount_time', models.DateTimeField(blank=True, null=True, verbose_name='discount expire')),
                ('is_box', models.BooleanField(default=False, verbose_name='is box')),
                ('is_new', models.BooleanField(default=True, verbose_name='is new')),
                ('is_special', models.BooleanField(default=False, verbose_name='is special')),
                ('is_colorful', models.BooleanField(default=False, verbose_name='is colorful')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand', to='catalogue.brand', verbose_name='brand')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('image', models.ImageField(upload_to='', verbose_name='image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalogue.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'product image',
                'verbose_name_plural': 'product images',
            },
        ),
        migrations.CreateModel(
            name='ProductFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='catalogue.product', verbose_name='product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'product favorite',
                'verbose_name_plural': 'product favorites',
            },
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='body')),
                ('rate', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='rate')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='catalogue.product', verbose_name='product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'product comment',
                'verbose_name_plural': 'product comments',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveSmallIntegerField(verbose_name='count')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='catalogue.color', verbose_name='products')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='catalogue.product', verbose_name='colors')),
            ],
            options={
                'verbose_name': 'product color',
                'verbose_name_plural': 'product colors',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='catalogue.category', verbose_name='products')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='catalogue.product', verbose_name='categories')),
            ],
            options={
                'verbose_name': 'products category',
                'verbose_name_plural': 'products categories',
            },
        ),
        migrations.CreateModel(
            name='BrandCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='catalogue.brand', verbose_name='brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='catalogue.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'brand category',
                'verbose_name_plural': 'brand categories',
            },
        ),
        migrations.CreateModel(
            name='BoxProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='catalogue.product', verbose_name='box')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to='catalogue.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'Product Box',
                'verbose_name_plural': 'Product Boxes',
            },
        ),
    ]
